{
        "define" : {
                "DATA_DIR": ".",
		"DATA_DIR_ABS": "/xdisk/dukepauli/reetu/test_ds_pipeline",
                "RESULTS_DIR": "./output",
	        "GENOME_DICT": "/xdisk/dukepauli/reetu/test_ds_pipeline/TAIR10_allchr.dict",
                "SING_CONT":  "singularity run --cleanenv /xdisk/dukepauli/reetu/hamr_pipeline", # Sing containers
        },
	
    "rules": [

	# Convert from BAM to SAM
	  {
          "command" : template("{SING_CONT}/samtools_1.10.sif samtools view -h -o {X}.sam {X}.sorted.bam"),
          "inputs" : [X+".sorted.bam"],
          "outputs" : [X+".sam"]
          } for X in SRAs,	
	# Get unique mapping reads 
	  {
          "command" : "grep -P '^\@|NH:i:1$' "+DATA_DIR+"/"+Y+".sam > "+DATA_DIR+"/"+Y+".unique.sam",
          "inputs" : [DATA_DIR+"/"+Y+".sam"],
          "outputs" : [DATA_DIR+"/"+Y+".unique.sam"]
          } for Y in SRAs,
	# Convert SAM to BAM
	  {
        "command" : template("{SING_CONT}/samtools_1.10.sif samtools view -bSh {DATA_DIR}/{Z}.unique.sam > {DATA_DIR}/{Z}.unique.bam"),
        "inputs" : [DATA_DIR+"/"+Z+".unique.sam"],
        "outputs" : [DATA_DIR+"/"+Z+".unique.bam"]
          } for Z in SRAs,
	# Convert BAM to SORTED BAM
	{
        "command" : template("{SING_CONT}/samtools_1.10.sif samtools sort {DATA_DIR}/{A}.unique.bam > {DATA_DIR}/{A}.sort.bam"),
        "inputs" : [DATA_DIR+"/"+A+".unique.bam"],
        "outputs" : [DATA_DIR+"/"+A+".sort.bam"]
        } for A in SRAs,
	# Add READ GROUPS with PICARD
	{
       "command" : template("{SING_CONT}/picard_2.23.8--0.sif picard AddOrReplaceReadGroups -I {DATA_DIR_ABS}/{SBAM}.sort.bam -O {DATA_DIR_ABS}/{SBAM}.RG.bam -ID {SBAM} -LB D4 -PL illumina_101SE -PU HWUSI-EAS1814:28:2 -SM {SBAM}"),
#	  "inputs" : [DATA_DIR+"/"+SBAM+".sort.bam"],
#          "outputs" : [DATA_DIR+"/"+SBAM+".RG.bam"]
        } for SBAM in SRAs,
	# REORDER SAM
	{
       "command" : template("{SING_CONT}/picard_2.23.8--0.sif picard ReorderSam I={DATA_DIR_ABS}/{RGBAM}.RG.bam O={DATA_DIR_ABS}/{RGBAM}.RGO.bam SD={GENOME_DICT}"),
        } for RGBAM in SRAs,
#       # Index BAM files
#       {
#       "command" : template("{SING_CONT}/samtools_1.10.sif samtools index /xdisk/dukepauli/reetu/brapa/{RGOBAM}.RGO.bam /xdisk/dukepauli/reetu/brapa/{RGOBAM}.RGO.bam.bai"),
###        "inputs" : ["./samout1/SRR7947123.seg"+N+".RGO.bam"],
###        "outputs" : ["./samout1/SRR7947123.seg{N}.RGO.bam.bai"],
#       } for RGOBAM in SRAs,
#      # Resolve splice alignments
#       {
#       "command" : template("{SING_CONT}/gatk3_3.5-0.sif java -jar /usr/GenomeAnalysisTK.jar -T SplitNCigarReads -R /xdisk/dukepauli/reetu/brapa/brapa_allchr.fasta -I /xdisk/dukepauli/reetu/brapa/{INDEXBAM}.RGO.bam -o /xdisk/dukepauli/reetu/brapa/{INDEXBAM}.resolvedalig.bam -U ALLOW_N_CIGAR_READS"),
##        "inputs" : ["./SRR7947123.seg"+N+".RGO.bam", "./TAIR10_allchr.fasta"],
##        "outputs" : ["./SRR7947123.seg"+N+".resolvealig.bam"],
#       } for INDEXBAM in SRAs,
#      # RUN HAMR
#     {
#     "command" : template("{SING_CONT}/hamr_xi_1.4.sif -fe /xdisk/dukepauli/reetu/brapa/{RALIGN}.resolvedalig.bam /xdisk/dukepauli/reetu/brapa/brapa_allchr.fasta /xdisk/dukepauli/reetu/brapa/models/euk_trna_mods.Rdata /xdisk/dukepauli/reetu/brapa/hamr_{RALIGN} {RALIGN} 30 5 0.01 H4 1 .05 .05"),
###        "inputs" : ["./SRR7947123.seg"+N+".RGO.bam", "./TAIR10_allchr.fasta"],
###        "outputs" : ["./SRR7947123.seg"+N+".resolvealig.bam"],
#        } for RALIGN in SRAs,
]
}
